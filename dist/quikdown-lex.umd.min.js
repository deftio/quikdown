/**
 * quikdown-lex - Lightweight Markdown Parser (Lexer Implementation)
 * @version 1.0.3dev4
 * @license BSD-2-Clause
 * @copyright DeftIO 2025
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).quikdown=t()}(this,function(){"use strict";const e={h1:"font-size:2em;font-weight:600;margin:.67em 0;text-align:left",h2:"font-size:1.5em;font-weight:600;margin:.83em 0",h3:"font-size:1.25em;font-weight:600;margin:1em 0",h4:"font-size:1em;font-weight:600;margin:1.33em 0",h5:"font-size:.875em;font-weight:600;margin:1.67em 0",h6:"font-size:.85em;font-weight:600;margin:2em 0",pre:"background:#f4f4f4;padding:10px;border-radius:4px;overflow-x:auto;margin:1em 0",code:"background:#f0f0f0;padding:2px 4px;border-radius:3px;font-family:monospace",blockquote:"border-left:4px solid #ddd;margin-left:0;padding-left:1em",table:"border-collapse:collapse;width:100%;margin:1em 0",th:"border:1px solid #ddd;padding:8px;background-color:#f2f2f2;font-weight:bold;text-align:left",td:"border:1px solid #ddd;padding:8px;text-align:left",hr:"border:none;border-top:1px solid #ddd;margin:1em 0",img:"max-width:100%;height:auto",a:"color:#06c;text-decoration:underline",strong:"font-weight:bold",em:"font-style:italic",del:"text-decoration:line-through",ul:"margin:.5em 0;padding-left:2em",ol:"margin:.5em 0;padding-left:2em",li:"margin:.25em 0","task-item":"list-style:none","task-checkbox":"margin-right:.5em"},t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"};function n(s,r={}){if(!s||"string"!=typeof s)return"";const i={inline_styles:r.inline_styles||!1,class_prefix:r.class_prefix||"quikdown-",allow_unsafe_urls:r.allow_unsafe_urls||!1,fence_plugin:r.fence_plugin||null},o=s.split("\n"),l=[];let a=0,c=null,u=[],p=[];const f=(t,n="")=>{if(i.inline_styles){const s=e[t]||"",r=n?s?`${s};${n}`:n:s;return r?` style="${r}"`:""}return` class="${i.class_prefix}${t}"`},h=e=>e.replace(/[&<>"']/g,e=>t[e]),d=e=>{if(!e)return"";if(i.allow_unsafe_urls)return e;const t=e.trim(),n=t.toLowerCase();return/^(javascript|vbscript|data):/i.test(n)?/^data:image\//i.test(n)?t:"#":t},g=e=>{if(!e)return"";const t=[];return e=e.replace(/`([^`]+)`/g,(e,n)=>(t.push(h(n)),`${t.length-1}`)),e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=h(e)).replace(/!\[([^\]]*)\]\(([^)]+)\)/g,(e,t,n)=>`<img${f("img")} src="${d(n)}" alt="${t}">`)).replace(/\[([^\]]+)\]\(([^)]+)\)/g,(e,t,n)=>{const s=d(n),r=/^https?:\/\//i.test(s)?' rel="noopener noreferrer"':"";return`<a${f("a")} href="${s}"${r}>${t}</a>`})).replace(/(^|\s)(https?:\/\/[^\s<]+)/g,(e,t,n)=>`${t}<a${f("a")} href="${d(n)}" rel="noopener noreferrer">${n}</a>`)).replace(/\*\*(.+?)\*\*/g,`<strong${f("strong")}>$1</strong>`)).replace(/__(.+?)__/g,`<strong${f("strong")}>$1</strong>`)).replace(/(?<!\*)\*(?!\*)([^*]+)\*(?!\*)/g,`<em${f("em")}>$1</em>`)).replace(/(?<!_)_(?!_)([^_]+)_(?!_)/g,`<em${f("em")}>$1</em>`)).replace(/~~(.+?)~~/g,`<del${f("del")}>$1</del>`)).replace(/  $/gm,`<br${f("br")}>`)).replace(/\x01(\d+)\x02/g,(e,n)=>`<code${f("code")}>${t[n]}</code>`)},m=e=>{const t=e.trim();if(!t)return 0;switch(t[0]){case"#":if(/^#{1,6}\s+/.test(t))return 1;break;case"-":case"*":case"_":if(/^[-*_](\s*[-*_]){2,}$/.test(t))return 2;if(/^[*+-]\s+/.test(t))return 5;break;case"+":if(/^\+\s+/.test(t))return 5;break;case"`":case"~":if(/^[`~]{3,}/.test(t))return 3;break;case">":return 4;case"|":return/^\|?\s*:?-+:?\s*(\|\s*:?-+:?\s*)*\|?$/.test(t)?8:7;default:if(/^\d+\.\s+/.test(t))return 6;if(t.includes("|"))return/^\s*:?-+:?\s*(\|\s*:?-+:?\s*)+\s*$/.test(t)?8:7}return/^\s+[*+-]\s+/.test(e)?5:/^\s+\d+\.\s+/.test(e)?6:9},$=()=>{if(u.length>0){const e=u.join("\n");l.push(`<p>${g(e)}</p>`),u=[]}},b=()=>{if(p.length>0){const e=p.join("\n").trim();if(1!==p.length||e.includes("\n"))if(2!==p.length||""!==p[1]||p[0].includes("\n")){const t=p.filter(e=>""!==e);if(0===t.length);else if(2===t.length&&t.every(e=>!e.includes("\n")&&e.trim().length>0))l.push(`<blockquote${f("blockquote")}>${g(t[0])}</blockquote>`),l.push(`<blockquote${f("blockquote")}>${g(t[1])}</blockquote>`);else{const t=n(e,i);l.push(`<blockquote${f("blockquote")}>${t}</blockquote>`)}}else l.push(`<blockquote${f("blockquote")}>${g(p[0])}</blockquote>`);else l.push(`<blockquote${f("blockquote")}>${g(e)}</blockquote>`);p=[]}},k=e=>{const t=[];let n=e;for(;n<o.length;){const e=o[n].match(/^(\s*)([*+-]|\d+\.)\s+(.+)$/);if(!e)break;const[,s,r,a]=e,c=Math.floor(s.length/2),u=/^\d+\./.test(r),p=u?"ol":"ul";let h=a,d=f("li");if(!u){const e=a.match(/^\[([x ])\]\s+(.*)$/i);if(e){const t="x"===e[1].toLowerCase(),n=i.inline_styles?' style="margin-right:.5em"':` class="${i.class_prefix}task-checkbox"`;d=i.inline_styles?' style="list-style:none"':` class="${i.class_prefix}task-item"`,h=`<input type="checkbox"${n}${t?" checked":""} disabled> ${e[2]}`}}for(;t.length>0&&c<t[t.length-1].indent;){const e=t.pop();e.items.push(`\n</${e.type}>`)}if(0===t.length||c>t[t.length-1].indent){const e={type:p,indent:c,items:c>0?[`\n<${p}${f(p)}>`]:[`<${p}${f(p)}>`]};c>0&&t.length>0&&(t[t.length-1].items.push(e.items[0]),e.items=[]),t.push(e)}else if(t[t.length-1].type!==p){const e=t.pop();e.items.push(`\n</${e.type}>`),t.length>0?t[t.length-1].items.push(e.items.join("")):l.push(e.items.join(""));const n={type:p,indent:c,items:[`<${p}${f(p)}>`]};t.push(n)}t[t.length-1].items.push(`\n<li${d}>${g(h)}</li>`),n++}for(;t.length>1;){const e=t.pop();e.items.push(`\n</${e.type}>`),t[t.length-1].items.push(e.items.join(""))}if(t.length>0){const e=t[0];e.items.push(`\n</${e.type}>`),l.push(e.items.join(""))}return n},x=e=>{let t=e;const n=[];let s=null;const r=[],i=o[t].trim().replace(/^\|/,"").replace(/\|$/,"").split("|").map(e=>e.trim());if(n.push(...i),t++,!(t<o.length))return e;if(8!==m(o[t]))return e;{const e=o[t].trim().replace(/^\|/,"").replace(/\|$/,"").split("|");s=e.map(e=>{const t=e.trim();return t.startsWith(":")&&t.endsWith(":")?"center":t.endsWith(":")?"right":"left"}),t++}for(;t<o.length;){const e=m(o[t]);if(7!==e&&8!==e)break;const n=o[t].trim().replace(/^\|/,"").replace(/\|$/,"").split("|").map(e=>e.trim());r.push(n),t++}let a=`<table${f("table")}>`;return n.length>0&&(a+=`\n<thead${f("thead")}>\n<tr${f("tr")}>\n`,n.forEach((e,t)=>{const n=s&&"left"!==s[t]?`text-align:${s[t]}`:"";a+=`<th${f("th",n)}>${g(e)}</th>\n`}),a+="</tr>\n</thead>"),r.length>0&&(a+=`\n<tbody${f("tbody")}>\n`,r.forEach(e=>{a+=`<tr${f("tr")}>\n`,e.forEach((e,t)=>{const n=s&&"left"!==s[t]?`text-align:${s[t]}`:"";a+=`<td${f("td",n)}>${g(e)}</td>\n`}),a+="</tr>\n"}),a+="</tbody>"),a+="\n</table>",l.push(a),t};let _=0;for(;_<o.length;){const e=o[_],t=m(e);switch(a){case 0:switch(t){case 0:_++;break;case 1:const t=e.trim().match(/^(#{1,6})\s+(.+?)(?:\s*#*)?$/);if(t){const e=t[1].length,n=t[2];l.push(`<h${e}${f("h"+e)}>${g(n)}</h${e}>`)}_++;break;case 2:l.push(`<hr${f("hr")}>`),_++;break;case 3:const n=e.trim().match(/^([`~]{3,})(.*)$/);n&&(a=1,c={marker:n[1][0],count:n[1].length,lang:(n[2]||"").trim(),lines:[]}),_++;break;case 4:a=4,p=[e.replace(/^\s*>\s?/,"")],_++;break;case 5:case 6:_=k(_);break;case 7:case 8:const s=x(_);s===_?(a=5,u=[e],_++):_=s;break;default:a=5,u=[e],_++}break;case 1:const n=e.trim();if(new RegExp(`^${c.marker}{${c.count},}\\s*$`).test(n)){const e=c.lines.join("\n");let t="";if(i.fence_plugin&&(t=i.fence_plugin(e,c.lang)),!t||void 0===t){const n=!i.inline_styles&&c.lang?` class="language-${c.lang}"`:"",s=i.inline_styles?f("code"):n;t=`<pre${f("pre")}><code${s}>${h(e)}</code></pre>`}l.push(t),a=0,c=null}else c.lines.push(e);_++;break;case 5:switch(t){case 0:$(),a=0,_++;break;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:$(),a=0;break;default:u.push(e),_++}break;case 4:4===t?(p.push(e.replace(/^\s*>\s?/,"")),_++):0===t&&_+1<o.length&&4===m(o[_+1])?(p.push(""),_++):(b(),a=0)}}return $(),b(),l.join("").trim()}return n.emitStyles=function(t="quikdown-"){let n="";for(const[s,r]of Object.entries(e))r&&(n+=`.${t}${s} { ${r} }\n`);return n},n.configure=function(e){return function(t){return n(t,e)}},n.version="1.0.3dev4","undefined"!=typeof module&&module.exports&&(module.exports=n),"undefined"!=typeof window&&(window.quikdown=n),n});
//# sourceMappingURL=quikdown-lex.umd.min.js.map
